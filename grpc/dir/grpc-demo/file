grpc使用protobuf http2   protobuf高性能的数据结构存储格式
开源的高性能rpc框架
多语言支持 grpc-go

c开发的,高性能   不同语言的服务的调用



protobuf压缩好,传输快,序列化和反序列化快
使用简单,维护成本低,只用维护proto文件,加密性好(二进制)
(json)跨语言跨平台   通用性不够json,自解释性差,需要通过proto文件解析才能获取数据结构







需要这些内容:
protoc(通用)
grpc-go:go get github.com/golang/protobuf/protoc-gen-go(可执行文件)
proto文件
(protoc可以将proto文件编译成各种代码,如果是go代码,那么需要protoc-gen-go





github.com/golang/protobuf/proto
1.定义一个结构体
2.proto.Marshal(结构体指针)
3.fmt.Println()打印proto编码序列化后的形式的 string







一元调用,就是发送请求,等待返回(简易模式) 一次请求一次返回
流模式,就是源源不断发送返回,很适合大数据或者长时间交互
服务端流模式:客户端一次请求,服务端源源不断返回数据,比如发送来一个股票码,源源不断返回股票的最新信息,或者要监控资源
客户端流模式:比如物联网终端不断向服务器输送信息
双向流模式:比如聊天机器人  聊天,你发来一条信息我不用等待也可以发信息